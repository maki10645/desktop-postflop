name: Build App

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-20.04]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: Install dependencies (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev

      - name: Install app dependencies
        run: npm ci

      - name: Build the app (Windows)
        if: matrix.platform == 'windows-latest'
        run: npm run tauri build -- --target x86_64-pc-windows-msvc -- -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort

      - name: Build the app (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: npm run tauri build -- --target x86_64-unknown-linux-gnu -- -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort

      - name: Upload Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-${{ github.sha }}
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/Desktop Postflop.exe
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/Desktop Postflop_*_x64_en-US.msi
          retention-days: 30

      - name: Upload Linux artifacts
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-${{ github.sha }}
          path: |
            src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/deb/desktop-postflop_*_amd64.deb
            src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/desktop-postflop_*_amd64.AppImage
          retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate build info
        id: build-info
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ steps.build-info.outputs.SHORT_SHA }}
          name: Build ${{ steps.build-info.outputs.SHORT_SHA }} (${{ steps.build-info.outputs.BRANCH_NAME }})
          body: |
            ðŸš€ **Automated Build**
            
            **Build Information:**
            - Branch: `${{ steps.build-info.outputs.BRANCH_NAME }}`
            - Commit: `${{ github.sha }}`
            - Build Date: ${{ steps.build-info.outputs.BUILD_DATE }}
            
            **Changes in this build:**
            ${{ github.event.head_commit.message }}
            
            ---
            
            **Downloads:**
            - Windows: `.exe` file for portable use, `.msi` for installation
            - Linux: `.deb` for Debian/Ubuntu, `.AppImage` for universal Linux
            
            **Note:** This is an automated build. For stable releases, please check the official release tags.
          files: |
            ./artifacts/windows-build-${{ github.sha }}/*
            ./artifacts/linux-build-${{ github.sha }}/*
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
